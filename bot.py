from aiogram import Router, F
from aiogram.types import Message
from vpn import add_client, del_client
from database import dynamic
from channel import check_user
import config
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import time

router = Router()

@router.message(F.text == '/start')
async def start(message: Message):
    if time.time() - config.last_client_update >= 3600 * 24:
        config.last_client_update = time.time()
        del_client.del_all_clients()
    await message.answer("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é:\ntelegra.ph")
    st1, st2 = await check_user(message.chat.id)
    if st1 and st2:
        if message.chat.id in dynamic.users_data:
            await message.answer(
                f"‚û°Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ VPN, –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n\n```{dynamic.users_data[message.chat.id]['vpn_string']}```\n\n‚ùï–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏!",
                parse_mode="Markdown")
        else:
            vpn_string = add_client.connect(str(message.chat.id))
            dynamic.users_data[message.chat.id] = {'vpn_string': vpn_string}
            await message.answer(
                f"‚úîÔ∏è –í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ VPN, –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n\n```{vpn_string}```\n\n‚ùï–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏!",
                parse_mode="Markdown")
    else:
        try:
            del_client.delete_client(dynamic.users_data[message.chat.id]["vpn_string"])
        except:
            pass
        if message.chat.id in dynamic.users_data:
            dynamic.users_data.pop(message.chat.id)
        keyboard = []
        if not st1:
            keyboard.append([InlineKeyboardButton(text='–ß–ó–•', url='https://t.me/+XPI7y5G08bZkNzdi')])
        if not st2:
            keyboard.append([InlineKeyboardButton(text="–ü—Ä–æ–º–æ–∫–æ–¥–æ—á–Ω–∞—è", url='https://t.me/+5U2hmZ3VonI5ZWEy')])
        keyboard.append([InlineKeyboardButton(text='‚òëÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='check_user')])
        markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
        await message.answer("–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª—ã", reply_markup=markup)

@router.message(F.text)
async def vpn_connect(message: Message):
    if time.time() - config.last_client_update >= 3600 * 24:
        config.last_client_update = time.time()
        del_client.del_all_clients()
    await message.answer("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é:\ntelegra.ph")
    await message.answer("–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –í–ü–ù –≤–≤–µ–¥–∏—Ç–µ /start")

@router.callback_query(F.data == 'check_user')
async def check_user_callback(call):
    if time.time() - config.last_client_update >= 3600 * 24:
        config.last_client_update = time.time()
        del_client.del_all_clients()
    await call.message.edit_text("üîé –ü—Ä–æ–≤–µ—Ä—è—é")
    st1, st2 = await check_user(call.message.chat.id)
    print(st1, st2)
    if st1 and st2:
        await call.message.answer("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é:\ntelegra.ph")
        await call.message.answer("–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –≤–≤–µ–¥–∏—Ç–µ /start")
    else:
        try:
            del_client.delete_client(dynamic.users_data[call.message.chat.id]["vpn_string"])
        except:
            pass
        if call.message.chat.id in dynamic.users_data:
            dynamic.users_data.pop(call.message.chat.id)
        keyboard = []
        if not st1:
            keyboard.append([InlineKeyboardButton(text='–ß–ó–•', url='https://t.me/+XPI7y5G08bZkNzdi')])
        if not st2:
            keyboard.append([InlineKeyboardButton(text="–ü—Ä–æ–º–æ–∫–æ–¥–æ—á–Ω–∞—è", url='https://t.me/+rJyP4zXtgMFlYzA6')])
        keyboard.append([InlineKeyboardButton(text='‚òëÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='check_user')])
        markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
        await call.message.answer("–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª—ã", reply_markup=markup)
